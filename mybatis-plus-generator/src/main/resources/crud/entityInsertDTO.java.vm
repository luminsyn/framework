package ${basePackage}.${DTOPackage};

#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
#if(${enableValidated})
#foreach($field in ${table.fields})
  #if(${field.metaInfo.nullable}==false && !${field.keyFlag} &&${field.propertyType}!="String")
import ${javaApiPackage}.validation.constraints.NotNull;
  #break
  #end
#end
#foreach($field in ${table.fields})
  #if(${field.metaInfo.nullable}==false && !${field.keyFlag} &&${field.propertyType}=="String")
import ${javaApiPackage}.validation.constraints.NotBlank;
  #break
  #end
#end
#foreach($field in ${table.fields})
  #if(${field.propertyType}=="String")
import ${javaApiPackage}.validation.constraints.Size;
  #break
  #end
#end
#end
#if(${springdoc})
import io.swagger.v3.oas.annotations.media.Schema;
#elseif(${swagger})
##import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end
#if(${entityLombokModel})
import lombok.Data;
#if(${chainModel})
import lombok.experimental.Accessors;
#end
#end

/**
 * $!{table.comment} 新增DTO
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Data
  #if(${chainModel})
@Accessors(chain = true)
  #end
#end
###if(${springdoc})
##@Schema(name = "${entity}InsertDTO ", description = "$!{table.comment}新增对象")
###elseif(${swagger})
##@ApiModel(value = "${entity}InsertDTO对象", description = "$!{table.comment}新增对象")
###end
public class ${entity}InsertDTO {
#if(${entitySerialVersionUID})
##
##    private static final long serialVersionUID = 1L;
#end
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
#if(${field.keyFlag})
#elseif(${field.versionField})
#elseif(${field.logicDeleteField})
#elseif($insertExcludeFields.contains(${field.propertyName}))
#else

  #if("$!field.comment" != "")
    #if(${springdoc})
    @Schema(description = "${field.comment}")
    #elseif(${swagger})
    @ApiModelProperty("${field.comment}")
    #else
    /**
     * ${field.comment}
     */
    #end
  #end
  #if(${enableValidated})
  #if(!${field.metaInfo.nullable})
    #if(${field.propertyType} == "String")
    @NotBlank(message = "${field.comment}不能为空")
    #else
    @NotNull(message = "${field.comment}不能为空")
    #end
  #end
  #if(${field.propertyType} == "String")
    @Size(message = "${field.comment}长度不能超过${field.metaInfo.length}", max = ${field.metaInfo.length})
  #end
  #end
    private ${field.propertyType} ${field.propertyName};
#end
#end
## ----------  END 字段循环遍历  ----------
#if(!${entityLombokModel})
#foreach($field in ${table.fields})
  #if(${field.keyFlag})
  #elseif(${field.versionField})
  #elseif(${field.logicDeleteField})
  #elseif($insertExcludeFields.contains(${field.propertyName}))
  #else
  #if(${field.propertyType.equals("boolean")})
    #set($getprefix="is")
  #else
    #set($getprefix="get")
  #end

    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

  #if(${chainModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
  #else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
  #end
        this.${field.propertyName} = ${field.propertyName};
  #if(${chainModel})
        return this;
  #end
    }
  #end
#end
## --foreach end---
#end

#if(!${entityLombokModel})

    @Override
    public String toString() {
        return "${entity}{" +
  #foreach($field in ${table.fields})
    #if(${field.keyFlag})
    #elseif(${field.versionField})
    #elseif(${field.logicDeleteField})
    #elseif($insertExcludeFields.contains(${field.propertyName}))
    #else
    #if($!{foreach.index}==0)
        "${field.propertyName} = " + ${field.propertyName} +
    #else
        ", ${field.propertyName} = " + ${field.propertyName} +
    #end
    #end
  #end
        "}";
    }
#end
}
