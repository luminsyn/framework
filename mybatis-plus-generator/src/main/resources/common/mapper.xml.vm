<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Mapper}.${table.mapperName}">

#if(${enableCache})
    <!-- 开启二级缓存 -->
    <cache type="${cacheClassName}"/>

#end
#if(${baseResultMap})
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="${package.Entity}.${entity}">
#foreach($field in ${table.fields})
#if(${field.keyFlag})##生成主键排在第一位
        <id column="${field.name}" property="${field.propertyName}" />
#end
#end
#foreach($field in ${table.commonFields})##生成公共字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#foreach($field in ${table.fields})
#if(!${field.keyFlag})##生成普通字段
        <result column="${field.name}" property="${field.propertyName}" />
#end
#end
    </resultMap>

#end
    #if(${resultMapForVO})
    <!-- vo查询映射结果 -->
    <resultMap id="voMap" type="${basePackage}.${VOPackage}.${entity}VO">
        #foreach($field in ${table.fields})
            #if(${field.keyFlag})##生成主键排在第一位
        <id column="${field.name}" property="${field.propertyName}" />
            #end
        #end
        #foreach($field in ${table.commonFields})##生成公共字段
        <result column="${field.name}" property="${field.propertyName}" />
        #end
        #foreach($field in ${table.fields})
            #if(${field.keyFlag})##生成普通字段
            #elseif(${field.logicDeleteField})
            #else
        <result column="${field.name}" property="${field.propertyName}" />
            #end
        #end
    </resultMap>

    #end
#if(${baseColumnList})
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
#foreach($field in ${table.commonFields})
        ${field.columnName},
#end
        ${table.fieldNames}
    </sql>

#end

    <select id="listByGeneric"#if(${resultMapForVO}) resultMap="voMap"#else resultType="${basePackage}.${VOPackage}.${entity}VO"#end>
        SELECT
        a.*
        FROM
##         ${schemaName} ${table.name} a
        `${table.name}` a
        <where>
#foreach($field in ${table.fields})
    #if(${field.logicDeleteField})
            a.`${field.columnName}` = 0
    #end
#end
            <if test="generic != null">
#foreach($field in ${table.fields})
    #if(${field.logicDeleteField})
##                AND a.${field.columnName} = 0
    #elseif(${field.keyFlag})
                <if test="generic.${field.propertyName} != null">
                    AND a.`${field.columnName}` = #{generic.${field.propertyName}}
                </if>
                <if test="generic.${field.propertyName}List != null and generic.${field.propertyName}List.size() > 0">
                    AND a.`${field.columnName}` IN
                    <foreach collection="generic.${field.propertyName}List" item="prop" open="(" close=")" separator=",">
                        #{prop}
                    </foreach>
                </if>
    #elseif($selectExcludeFields.contains(${field.propertyName}))
    #else
        #if(${field.propertyType} == "String")
                <if test="generic.${field.propertyName} != null and generic.${field.propertyName}.length()>0">
                    AND a.`${field.columnName}` = #{generic.${field.propertyName}}
                </if>
                <if test="generic.${field.propertyName}Like  != null and generic.${field.propertyName}Like.length()>0">
                    AND a.`${field.columnName}` LIKE CONCAT('%',#{generic.${field.propertyName}Like},'%')
                </if>
        #elseif($jdbcTimeTypes.contains(${field.metaInfo.jdbcType}))
                <if test="generic.${field.propertyName} != null">
                    AND a.`${field.columnName}` = #{generic.${field.propertyName}}
                </if>
                <if test="generic.${field.propertyName}Start != null">
                    AND a.`${field.columnName}` &gt;= #{generic.${field.propertyName}Start}
                </if>
                <if test="generic.${field.propertyName}End != null">
                    AND a.`${field.columnName}` &lt;= #{generic.${field.propertyName}End}
                </if>
        #elseif(${field.propertyType} == "Integer"||${field.propertyType} == "Long")
                <if test="generic.${field.propertyName} != null">
                    AND a.`${field.columnName}` = #{generic.${field.propertyName}}
                </if>
                <if test="generic.${field.propertyName}List != null and generic.${field.propertyName}List.size() > 0">
                    AND a.`${field.columnName}` IN
                    <foreach collection="generic.${field.propertyName}List" item="prop" open="(" close=")" separator=",">
                        #{prop}
                    </foreach>
                </if>
        #else
                <if test="generic.${field.propertyName} != null">
                    AND a.`${field.columnName}` = #{generic.${field.propertyName}}
                </if>
        #end
    #end
#end
## ----------  END 字段循环遍历  ----------
            </if>
        </where>
        #if(${orderBySql})
        ORDER BY ${orderBySql}
        #end
    </select>


</mapper>
